{"version":3,"sources":["src/CST.ts","src/scenes/MenuScene.ts","src/scenes/LoadScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\"\r\n    }\r\n    IMAGE: {\r\n        LOGO: \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY: \"play_button.png\",\r\n        TITLE: \"title_bg.jpg\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"shuinvy-childhood.mp3\"\r\n    },\r\n    SPRITE: {\r\n        CAT: \"cat.png\"\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init(){\r\n\r\n    }\r\n    create(){ //creating the menu scene\r\n\r\n        //create images (z order)\r\n\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.20, CST.IMAGE.LOGO).setDepth(1);\r\n\r\n        this.add.image(0,0, CST.IMAGE.TITLE).setOrigin(0).setDepth(0);\r\n\r\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 , CST.IMAGE.PLAY).setDepth(1);\r\n\r\n        let optionsButton = this.add.image(this.game.renderer.width / 2, this. game.renderer.height / 2 + 100, CST.IMAGE.OPTIONS).setDepth(1);\r\n\r\n        //create sprites (if using pixel art, remove sharpen)\r\n\r\n        let hoverSprite: Phaser.GameObjects.Sprite = this.add.sprite(100, 100, CST.SPRITE.CAT);\r\n        hoverSprite.setScale(3);\r\n        hoverSprite.setVisible(false);\r\n\r\n        //create audio, disable pauseonblur\r\n        this.sound.play(CST.AUDIO.TITLE,{\r\n            loop: true\r\n        })\r\n\r\n        //create animation\r\n\r\n        this.anims.create({\r\n            key: \"walk\",\r\n            frameRate: 4,\r\n            repeat: -1, //repeat forever\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.CAT, {\r\n                frames: [0,1,2,3]\r\n            })\r\n        })\r\n        //make image buttons interactive\r\n\r\n        /*\r\n            PointerEvents:\r\n                pointerover - hovering\r\n                pointerout - not hovering\r\n                pointerup - click and release\r\n                pointerdown - just click\r\n        */\r\n\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerover\", ()=>{\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"walk\")\r\n            hoverSprite.x = playButton.x - playButton.width;\r\n            hoverSprite.y = playButton.y;\r\n        })\r\n\r\n        playButton.on(\"pointerout\", ()=>{\r\n            hoverSprite.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", ()=>{\r\n            //this.scene.start();\r\n        })\r\n\r\n        optionsButton.setInteractive();\r\n\r\n        optionsButton.on(\"pointerover\", ()=>{\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"walk\")\r\n            hoverSprite.x = optionsButton.x - optionsButton.width;\r\n            hoverSprite.y = optionsButton.y;\r\n        })\r\n\r\n        optionsButton.on(\"pointerout\", ()=>{\r\n            hoverSprite.setVisible(false);\r\n        })\r\n\r\n        optionsButton.on(\"pointerup\", ()=>{\r\n            //this.scene.launch();\r\n        })\r\n\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport { MenuScene } from \"./MenuScene\";\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init(){\r\n\r\n    }\r\n    loadImages(){\r\n        this.load.setPath(\"./assets/image\");\r\n\r\n        for(let prop in CST.IMAGE){\r\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n        }\r\n    }\r\n    loadAudio(){\r\n        this.load.setPath(\"./assets/audio\");\r\n\r\n        for(let prop in CST.AUDIO){\r\n            //@ts-ignore\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n    loadSprites(frameConfig?: Phaser.Loader.FileTypes.ImageFrameConfig){\r\n        this.load.setPath(\"./assets/sprite\");\r\n\r\n        for(let prop in CST.SPRITE){\r\n            //@ts-ignore\r\n            this.load.spritesheet(CST.SPRITE[prop], CST.SPRITE[prop], frameConfig);\r\n        }\r\n    }\r\n    preload(){\r\n        //load image, spritesheet, sound\r\n        this.loadAudio();\r\n        this.loadSprites({\r\n            frameHeight: 32,\r\n            frameWidth: 32\r\n        });\r\n        this.loadImages();\r\n\r\n        //create loading bar\r\n\r\n        let loadnigBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff //White\r\n            }\r\n        })\r\n\r\n        /*\r\n        Loader Events:\r\n            complete - when loading everything\r\n            progress - loader number progress in decimal\r\n        */\r\n\r\n       //smiulate large load\r\n       /*\r\n       for(let i=0; i<100; i++){\r\n            this.load.spritesheet(\"cat\" + i, \"./assets/cat.png\", {\r\n                frameHeight: 32,\r\n                frameWidth: 32\r\n            });\r\n       }*/\r\n\r\n        this.load.on(\"progress\",(percent: number)=>{\r\n            loadnigBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n            console.log(percent);\r\n        })\r\n\r\n        this.load.on(\"complete\", ()=>{\r\n            console.log(\"done\")\r\n        });\r\n\r\n        this.load.on(\"load\", (file: Phaser.Loader.File)=>{\r\n            console.log(file.src)\r\n        })\r\n\r\n    }\r\n    create(){\r\n        this.scene.add(CST.SCENES.MENU, MenuScene, false)\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","/**@type {import(\"../typings/phaser\")} */\r\n\r\nimport {LoadScene} from \"./scenes/LoadScene\";\r\nimport {MenuScene} from \"./scenes/MenuScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    width: 800,\r\n    height: 600,\r\n    scene: [\r\n        LoadScene\r\n    ],\r\n    render: {\r\n        pixelArt: true\r\n    }\r\n});\r\n\r\n"]}